services:
  postgres-db:
    image: postgres:latest
    container_name: monitoring-postgres-db
    environment:
      POSTGRES_USER: username
      POSTGRES_PASSWORD: password
      POSTGRES_DB: postgres_database
    ports:
      - "5432:5432"
    volumes:
      - postgres_data_books:/var/lib/postgresql/data
    networks:
      - books-network


  book-service:
    image: book-service
    container_name: book-service
    ports:
      - "8080:8080"
    depends_on:
      - postgres-db
    networks:
      - books-network


  # Экспортер метрик для PostgreSQL
  postgres-exporter:
    image: prometheuscommunity/postgres-exporter:latest
    container_name: postgres-exporter
    environment:
      DATA_SOURCE_NAME: "postgresql://username:password@postgres-db:5432/postgres_database?sslmode=disable"
      PG_EXPORTER_EXTEND_QUERY_PATH: "/config/queries.yml"  # Ключевой параметр!
    ports:
      - "9187:9187"  # Порт экспортера
    volumes:
      - ./prometheus/queries/postgres.yml:/config/queries.yml
    depends_on:
      - postgres-db
    networks:
      - books-network


  # Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml  # Конфиг Prometheus
      - ./prometheus/rule_files/:/etc/prometheus/rule_files/
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    depends_on:
      - postgres-exporter
    networks:
      - books-network


  # Grafana для визуализации
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data_books:/var/lib/grafana
    depends_on:
      - prometheus
      - loki
    networks:
      - books-network


  alertmanager:
    image: prom/alertmanager:latest
    container_name: alertmanager
    volumes:
      - ./alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
    ports:
      - "9093:9093"
    restart: unless-stopped
    networks:
      - books-network


  loki:
    image: grafana/loki:latest
    container_name: loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yml
    volumes:
      - ./loki/loki-config.yml:/etc/loki/local-config.yml
      - loki-data:/loki
    networks:
      - books-network


  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    volumes:
      - /var/log:/var/log   # Монтируем директорию с логами
      - ./loki/promtail-config.yml:/etc/promtail/config.yml
      - /var/run/docker.sock:/var/run/docker.sock
    command: -config.file=/etc/promtail/config.yml
    networks:
      - books-network


volumes:
  postgres_data_books:
  grafana_data_books:
  loki-data:

networks:
  books-network:
    driver: bridge