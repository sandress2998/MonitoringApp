stages:
  - swagger-generate
  - docs-publish

variables:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"
  GRADLE_USER_HOME: "${CI_PROJECT_DIR}/.gradle"

cache:
  paths:
    - .gradle/wrapper
    - .gradle/caches

swagger-generate:
  stage: swagger-generate
  image: gradle:8.6-jdk17
  artifacts:
    paths:
      - ./build/tmp/openapi.json
  script:
    - ./gradlew generateOpenApiDocs

docs-publish:
  stage: deploy
  image: alpine:latest  # Легковесный образ
  variables:
    OPENAPI_SOURCE: "./build/tmp/openapi.json"  # Исходный файл
    DOCS_DIR: "./docs"                         # Папка для HTML
    GITHUB_REPO: "sandress2998/MonitoringApp"     # Например, "myorg/monitoring-app"
    GITHUB_PAGES_BRANCH: "gh-pages"            # Ветка для GitHub Pages
  before_script:
    - apk add --no-cache git curl  # Устанавливаем инструменты
  script:
    - >
      mkdir -p ${DOCS_DIR}

      cp ${OPENAPI_SOURCE} ${DOCS_DIR}/openapi.json

      cat > ${DOCS_DIR}/index.html <<EOF
      <!DOCTYPE html>
      <html lang="en">
        <head>
          <meta charset="utf-8" />
          <meta name="viewport" content="width=device-width, initial-scale=1" />
          <title>API Documentation</title>
          <link 
            rel="stylesheet" 
            href="https://unpkg.com/swagger-ui-dist@5/swagger-ui.css" 
          />
        </head>
        <body>
          <div id="swagger-ui"></div>
          <script src="https://unpkg.com/swagger-ui-dist@5/swagger-ui-bundle.js"></script>
          <script>
            SwaggerUIBundle({
              url: "./openapi.json",  # Путь относительно index.html
              dom_id: "#swagger-ui",
              presets: [
                SwaggerUIBundle.presets.apis,
                SwaggerUIBundle.SwaggerUIStandalonePreset
              ],
              layout: "StandaloneLayout",
              deepLinking: true
            })
          </script>
        </body>
      </html>
      EOF

      git clone --branch=${GITHUB_PAGES_BRANCH} https://${GITHUB_TOKEN}@github.com/${GITHUB_REPO}.git gh-pages-deploy

      cp -r ${DOCS_DIR}/* gh-pages-deploy/

      cd gh-pages-deploy
      git config user.name "GitLab CI"
      git config user.email "ci@gitlab.com"
      git add .
      git commit -m "Update Swagger Docs $(date +%Y-%m-%d)"
      git push origin ${GITHUB_PAGES_BRANCH}
  rules:
    - if: $CI_COMMIT_BRANCH == "master" || $CI_COMMIT_BRANCH == "main"