stages:
  - swagger-generate
  - docs-publish

variables:
  GRADLE_OPTS: -Dorg.gradle.daemon=false
  GRADLE_USER_HOME: ${CI_PROJECT_DIR}/.gradle

cache:
  paths:
    - .gradle/wrapper
    - .gradle/caches

swagger-generate:
  stage: swagger-generate
  image: gradle:8.6-jdk17
  artifacts:
    paths:
      - ./build/openapi.json
  before_script:
    - chmod +x gradlew
  script:
    - ./gradlew generateOpenApiDocs

docs-publish:
  stage: docs-publish
  image: alpine:latest  # Легковесный образ
  variables:
    OPENAPI_SOURCE: "./build/tmp/openapi.json"  # Исходный файл
    DOCS_DIR: "./docs"                         # Папка для HTML
    GITHUB_REPO: "sandress2998/MonitoringApp"     # Например, "myorg/monitoring-app"
    GITHUB_PAGES_BRANCH: "gh-pages"            # Ветка для GitHub Pages
  before_script:
    - apk add --no-cache git curl  # Устанавливаем инструменты
  script:
    - >
      curl -o docs.html "http://host.docker.internal:8080/swagger-ui/index.html"
      git clone --branch gh-pages "https://${GITHUB_TOKEN}@github.com/sandress2998/MonitoringApp.git"
      cd MonitoringApp
      cp ../docs.html ./
      git config user.name "CI Bot" && git config user.email "ci@example.com"
      git add docs.html && git commit -m "Update $(date +%Y-%m-%d)"
      git push "https://${GITHUB_TOKEN}@github.com/sandress2998/MonitoringApp.git" gh-pages
  rules:
    - if: $CI_COMMIT_BRANCH == "master" || $CI_COMMIT_BRANCH == "main"